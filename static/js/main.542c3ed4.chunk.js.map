{"version":3,"sources":["components/BasicUsage/index.jsx","../../src/index.js","components/common/Box/index.jsx","components/common/TextField/index.jsx","components/Sizes/index.jsx","components/Texts/index.jsx","components/Colors/index.jsx","App.js","index.js"],"names":["Container","styled","div","BasicUsage","Text","props","OffText","OnText","Wrapper","Input","Slider","checked","onChange","offText","onText","extraLarge","large","small","extraSmall","colorOn","colorOff","textColorOff","textColorOn","disabled","type","e","Box","children","Field","TextField","label","value","changeHandler","placeholder","target","sizeOptions","ToggleBox","RadioGroup","Radio","Sizes","useState","isSunShining","setIsSunShining","selectedSize","setSelectedSize","map","size","index","htmlFor","className","key","readOnly","name","id","InputWrapper","Texts","textForOff","setTextForOff","textForOn","setTextForOn","Disclaimer","p","Hr","hr","Colors","isThatRight","setIsThatRight","setColorOff","setColorOn","setTextColorOff","setTextColorOn","href","rel","width","Title","h1","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.542c3ed4.chunk.js","sourcesContent":["/** @format */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst BasicUsage = () => (\n  <Container>\n    <h3>Installation</h3>\n    <pre>\n      <code>{`npm install react-custom-toggle`}</code>\n    </pre>\n    <pre>\n      <code>{`yarn add react-custom-toggle`}</code>\n    </pre>\n    <h3>Usage</h3>\n    <pre>\n      <code>\n        {`\nimport React, { useState } from 'react';\nimport Toggle from 'react-custom-toggle';\n     \nconst Example = () => {\n  const [isSunShining, setIsSunShining] = useState(false);\n\n  return (\n    <Toggle checked={isSunShining} onChange={setIsSunShining} />\n  );\n};`}\n      </code>\n    </pre>\n  </Container>\n);\n\nconst Container = styled.div`\n  margin: 3em 0;\n`;\n\nexport default BasicUsage;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Toggle = ({\n  checked,\n  onChange,\n  offText,\n  onText,\n  extraLarge,\n  large,\n  small,\n  extraSmall,\n  colorOn,\n  colorOff,\n  textColorOff,\n  textColorOn,\n  disabled\n}) => (\n  <Container>\n    {offText && (\n      <OffText\n        extraLarge={extraLarge}\n        large={large}\n        small={small}\n        extraSmall={extraSmall}\n        textColorOff={textColorOff}\n      >\n        {offText}\n      </OffText>\n    )}\n    <Wrapper\n      extraLarge={extraLarge}\n      large={large}\n      small={small}\n      extraSmall={extraSmall}\n    >\n      <Input\n        type='checkbox'\n        checked={checked}\n        onChange={(e) => onChange(e.target.checked)}\n        disabled={disabled}\n        extraLarge={extraLarge}\n        large={large}\n        small={small}\n        extraSmall={extraSmall}\n        colorOn={colorOn}\n      />\n      <Slider\n        extraLarge={extraLarge}\n        large={large}\n        small={small}\n        extraSmall={extraSmall}\n        colorOff={colorOff}\n        disabled={disabled}\n      />\n    </Wrapper>\n    {onText && (\n      <OnText\n        extraLarge={extraLarge}\n        large={large}\n        small={small}\n        extraSmall={extraSmall}\n        textColorOn={textColorOn}\n      >\n        {onText}\n      </OnText>\n    )}\n  </Container>\n)\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Text = styled.span`\n  font-family: inherit;\n  ${(props) => {\n    if (props.extraLarge) {\n      return `\n        font-size: 1.4em;\n      `\n    } else if (props.large) {\n      return `\n        font-size: 1.2em;\n      `\n    } else if (props.small) {\n      return `\n        font-size: 0.8em;\n      `\n    } else if (props.extraSmall) {\n      return `\n        font-size: 0.6em;\n      `\n    } else {\n      return `\n        font-size: 1em;\n      `\n    }\n  }}\n`\n\nconst OffText = styled(Text)`\n  color: ${(props) => (props.textColorOff ? props.textColorOff : 'inherit')};\n`\n\nconst OnText = styled(Text)`\n  color: ${(props) => (props.textColorOn ? props.textColorOn : 'inherit')};\n`\n\nconst Wrapper = styled.label`\n  position: relative;\n  display: block;\n  margin: 0 0.5rem;\n  ${(props) => {\n    if (props.extraLarge) {\n      return `\n        width: 100px;\n        height: 50px;\n      `\n    } else if (props.large) {\n      return `\n        width: 80px;\n        height: 40px;\n      `\n    } else if (props.small) {\n      return `\n        width: 40px;\n        height: 20px;\n      `\n    } else if (props.extraSmall) {\n      return `\n        width: 20px;\n        height: 10px;\n      `\n    } else {\n      return `\n        width: 60px;\n        height: 30px;\n      `\n    }\n  }}\n`\n\nconst Input = styled.input`\n  display: none;\n  &:checked + span {\n    background: ${(props) => (props.colorOn ? props.colorOn : '#68d391')};\n    &::before {\n      ${(props) => {\n        if (props.extraLarge) {\n          return `\n            transform: translateX(48px) rotateZ(360deg);\n        `\n        } else if (props.large) {\n          return `\n            transform: translateX(38px) rotateZ(360deg);\n        `\n        } else if (props.small) {\n          return `\n            transform: translateX(18px) rotateZ(360deg);\n        `\n        } else if (props.extraSmall) {\n          return `\n            transform: translateX(8px) rotateZ(360deg);\n        `\n        } else {\n          return `\n            transform: translateX(28px) rotateZ(360deg);\n        `\n        }\n      }}\n    }\n  }\n`\n\nconst Slider = styled.span`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  text-align: left;\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n  background: ${(props) =>\n    props.colorOff ? props.colorOff : props.disabled ? '#d2d2d2' : '#fc8181'};\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2),\n    inset 0 3px 8px 0 rgba(0, 0, 0, 0.3);\n  border-radius: 36px;\n  transition: transform 300ms, background-color 300ms;\n  transition-delay: 200ms;\n  ${(props) => {\n    if (props.extraLarge) {\n      return `\n        padding-inline-start: 6px;\n      `\n    } else if (props.large) {\n      return `\n        padding-inline-start: 5px;\n      `\n    } else if (props.small) {\n      return `\n        padding-inline-start: 3px;\n      `\n    } else if (props.extraSmall) {\n      return `\n        padding-inline-start: 2px;\n      `\n    } else {\n      return `\n        padding-inline-start: 4px;\n      `\n    }\n  }}\n  &::before {\n    content: '';\n    position: absolute;\n    background: conic-gradient(#f7fafc, #edf2f7, #e2e8f0, #cbd5e0, #a0aec0);\n    transition: 300ms;\n    border-radius: 50%;\n    ${(props) => {\n      if (props.extraLarge) {\n        return `\n          width: 40px;\n          height: 40px;\n          top: 5px;\n      `\n      } else if (props.large) {\n        return `\n          width: 32px;\n          height: 32px;\n          top: 4px;\n      `\n      } else if (props.small) {\n        return `\n          width: 16px;\n          height: 16px;\n          top: 2px;\n      `\n      } else if (props.extraSmall) {\n        return `\n          width: 8px;\n          height: 8px;\n          top: 1px;\n      `\n      } else {\n        return `\n          width: 24px;\n          height: 24px;\n          top: 3px;\n      `\n      }\n    }}\n  }\n`\n\nexport default Toggle\n","/** @format */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Box = ({ children }) => <Container>{children}</Container>;\n\nconst Container = styled.div`\n  border: 1px solid #eee;\n  box-shadow: 1px 3px 3px #ccc;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 20px;\n`;\n\nexport default Box;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TextField = ({ label, value, changeHandler }) => (\n  <Field>\n    <input\n      type=\"text\"\n      placeholder=\" \"\n      value={value}\n      onChange={(e) => changeHandler(e.target.value)}\n    />\n    <label>{label}</label>\n  </Field>\n);\n\nconst Field = styled.div`\n  position: relative; \n  label {\n    position: absolute;\n    font-size: 12px;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    background-color: white;\n    color: gray;\n    padding: 0 0.3rem;\n    margin: 0 0.5rem;\n    transition: 0.1s ease-out;\n    transform-origin: left top;\n    pointer-events: none;\n  }\n  input {\n    font-size: 14px;\n    outline: none;\n    border: 1px solid gray;\n    border-radius: 4px;  \n    padding: 10px;\n    transition: 0.1s ease-out;\n  }\n  input:focus {\n    border-color: #63b3ed;  \n  }\n  input:focus + label {\n    color: #63b3ed;\n    top: 0;\n    transform: translateY(-50%) scale(.9);\n  }\n  input:not(:placeholder-shown) + label {\n    top: 0;\n    transform: translateY(-50%) scale(.9);\n  }\n`;\n\nexport default TextField;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Toggle from 'react-custom-toggle';\n\nimport { Box } from '../common';\n\nconst sizeOptions = ['extraSmall', 'small', 'default', 'large', 'extraLarge'];\n\nconst Sizes = () => {\n  const [isSunShining, setIsSunShining] = useState(false);\n  const [selectedSize, setSelectedSize] = useState('default');\n\n  return (\n    <Container>\n      <h3>Sizes</h3>\n      <Box>\n        <ToggleBox>\n          <Toggle\n            checked={isSunShining}\n            onChange={setIsSunShining}\n            extraSmall={selectedSize === 'extraSmall'}\n            small={selectedSize === 'small'}\n            large={selectedSize === 'large'}\n            extraLarge={selectedSize === 'extraLarge'}\n          />\n        </ToggleBox>\n        <RadioGroup onChange={(e) => setSelectedSize(e.target.value)}>\n          {sizeOptions.map((size, index) => (\n            <Radio htmlFor={size} className=\"radio\" key={`size-${index}`}>\n              <input\n                readOnly\n                type=\"radio\"\n                name=\"sizes\"\n                value={size}\n                id={size}\n                checked={selectedSize === size}\n              />\n              <span className=\"label\"></span>\n              {size}\n            </Radio>\n          ))}\n        </RadioGroup>\n        <pre>\n          <code>{`const [isSunShining, setIsSunShining] = useState(${isSunShining});`}</code>\n        </pre>\n        <pre>\n          <code>\n            {`<Toggle checked={isSunShining} onChange={setIsSunShining} ${\n              selectedSize === 'default' ? '' : selectedSize + ' '\n            }/>`}\n          </code>\n        </pre>\n      </Box>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin: 3em 0;\n`;\n\nconst ToggleBox = styled.div`\n  margin: 2em 0;\n`;\n\nconst RadioGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n`;\n\nconst Radio = styled.label`\n  position: relative;\n  cursor: pointer;\n  line-height: 20px;\n  font-size: 14px;\n  margin: 15px;\n  display: flex;\n  input {\n    display: none;\n    &:checked + .label {\n      border-color: #63b3ed;\n      &:after {\n        transform: scale(1);\n        transition: all 0.2s cubic-bezier(0.35, 0.9, 0.4, 0.9);\n        opacity: 1;\n      }\n    }\n  }\n  span {\n    position: relative;\n    display: block;\n    float: left;\n    margin-right: 10px;\n    width: 16px;\n    height: 16px;\n    border: 2px solid #ccc;\n    border-radius: 100%;\n    -webkit-tap-highlight-color: transparent;\n    &:after {\n      content: '';\n      position: absolute;\n      top: 3px;\n      left: 3px;\n      width: 10px;\n      height: 10px;\n      border-radius: 100%;\n      background: #63b3ed;\n      transform: scale(0);\n      transition: all 0.2s ease;\n      opacity: 0.2;\n      pointer-events: none;\n    }\n    &:hover {\n      &:after {\n        transform: scale(3.6);\n      }\n    }\n  }\n`;\n\nexport default Sizes;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Toggle from 'react-custom-toggle';\n\nimport { Box, TextField } from '../common';\n\nconst Texts = () => {\n  const [isSunShining, setIsSunShining] = useState(false);\n  const [textForOff, setTextForOff] = useState('OFF');\n  const [textForOn, setTextForOn] = useState('ON');\n\n  return (\n    <Container>\n      <h3>Texts</h3>\n      <Box>\n        <ToggleBox>\n          <Toggle\n            checked={isSunShining}\n            onChange={setIsSunShining}\n            offText={textForOff}\n            onText={textForOn}\n          />\n        </ToggleBox>\n        <InputWrapper>\n          <TextField label=\"textOff\" value={textForOff} changeHandler={setTextForOff} />\n          <TextField label=\"textOn\" value={textForOn} changeHandler={setTextForOn} />\n        </InputWrapper>\n        <pre>\n          <code>{`const [isSunShining, setIsSunShining] = useState(${isSunShining});`}</code>\n        </pre>\n        <pre>\n          <code>\n            {`<Toggle checked={isSunShining} onChange={setIsSunShining} \n  offText=\"${textForOff}\" onText=\"${textForOn}\" />`}\n          </code>\n        </pre>\n      </Box>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin: 3em 0;\n`;\n\nconst ToggleBox = styled.div`\n  margin: 2em 0;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport default Texts;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Toggle from 'react-custom-toggle';\n\nimport { Box, TextField } from '../common';\n\nconst Colors = () => {\n  const [isSunShining, setIsSunShining] = useState(false);\n  const [isThatRight, setIsThatRight] = useState(false);\n  const [colorOff, setColorOff] = useState('#ed8936');\n  const [colorOn, setColorOn] = useState('#63b3ed');\n  const [textColorOff, setTextColorOff] = useState('violet');\n  const [textColorOn, setTextColorOn] = useState('royalblue');\n\n  return (\n    <Container>\n      <h3>Colors</h3>\n      <Disclaimer>\n        Valid values: hex colors (e.g #ff2bbc) or&nbsp;\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/named-color\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          named colors\n        </a>\n        .\n      </Disclaimer>\n      <Box>\n        <h4>Background colors</h4>\n        <ToggleBox>\n          <Toggle\n            checked={isSunShining}\n            onChange={setIsSunShining}\n            colorOff={colorOff}\n            colorOn={colorOn}\n          />\n        </ToggleBox>\n        <InputWrapper>\n          <TextField label=\"colorOff\" value={colorOff} changeHandler={setColorOff} />\n          <TextField label=\"colorOn\" value={colorOn} changeHandler={setColorOn} />\n        </InputWrapper>\n        <pre>\n          <code>{`const [isSunShining, setIsSunShining] = useState(${isSunShining});`}</code>\n        </pre>\n        <pre>\n          <code>\n            {`<Toggle checked={isSunShining} onChange={setIsSunShining} \n  colorOff=\"${colorOff}\" colorOn=\"${colorOn}\" />`}\n          </code>\n        </pre>\n        <Hr width=\"320\" />\n        <h4>Texts colors</h4>\n        <ToggleBox>\n          <Toggle\n            checked={isThatRight}\n            onChange={setIsThatRight}\n            offText=\"OFF\"\n            onText=\"ON\"\n            textColorOff={textColorOff}\n            textColorOn={textColorOn}\n          />\n        </ToggleBox>\n        <InputWrapper>\n          <TextField label=\"textColorOff\" value={textColorOff} changeHandler={setTextColorOff} />\n          <TextField label=\"textColorOn\" value={textColorOn} changeHandler={setTextColorOn} />\n        </InputWrapper>\n\n        <pre>\n          <code>{`const [isThatRight, setIsThatRight] = useState(${isThatRight});`}</code>\n        </pre>\n        <pre>\n          <code>\n            {`<Toggle checked={isThatRight} onChange={setIsThatRight} offText=\"OFF\"\n  onText=\"ON\" textColorOff=\"${textColorOff}\" textColorOn=\"${textColorOn}\" />`}\n          </code>\n        </pre>\n      </Box>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin: 3em 0;\n`;\n\nconst ToggleBox = styled.div`\n  margin: 2em 0;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Disclaimer = styled.p`\n  color: #637280;\n  margin-bottom: 1em;\n`;\n\nconst Hr = styled.hr`\n  margin: 4em auto;\n  border: 1px solid #ccc;\n`;\n\nexport default Colors;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport BasicUsage from './components/BasicUsage';\nimport Sizes from './components/Sizes';\nimport Texts from './components/Texts';\nimport Colors from './components/Colors';\n\nconst App = () => {\n  return (\n    <Container>\n      <Title>React Custom Toggle</Title>\n      <BasicUsage />\n      <Sizes />\n      <Texts />\n      <Colors />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  width: 768px;\n  padding: 0 50px;\n  box-sizing: border-box;\n  margin: 0 auto;\n`\n\nconst Title = styled.h1`\n  margin-top: 20px;\n  text-align: center;\n`\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}