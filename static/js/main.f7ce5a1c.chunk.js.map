{"version":3,"sources":["components/BasicUsage/index.jsx","../../src/index.js","components/Sizes/index.jsx","App.js","index.js"],"names":["Pre","styled","pre","BasicUsage","Container","Text","props","OffText","OnText","Wrapper","Input","Slider","offText","onText","extraLarge","large","small","extraSmall","colorOn","colorOff","textColorOff","textColorOn","disabled","type","sizeOptions","div","Box","ToogleBox","RadioGroup","Radio","label","Sizes","useState","selectedSize","setSelectedSize","onChange","e","target","value","map","size","index","htmlFor","className","key","readOnly","name","id","checked","Title","h1","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7ce5a1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BasicUsage = () => (\r\n  <>\r\n    <h3>Installation</h3>\r\n    <Pre>\r\n      <code>{`npm install react-custom-toggle`}</code>\r\n    </Pre>\r\n    <Pre>\r\n      <code>{`yarn add react-custom-toggle`}</code>\r\n    </Pre>\r\n    <h3>Usage</h3>\r\n    <Pre>\r\n      <code>\r\n        {`import Toggle from 'react-custom-toggle';\r\n      \r\nconst Example = () => <Toggle />;`}\r\n      </code>\r\n    </Pre>\r\n  </>\r\n);\r\n\r\nconst Pre = styled.pre`\r\n  border: 1px solid #ccc;\r\n  background: #f5f5f5;\r\n  border-radius: 4px;\r\n  padding: 10px 20px;\r\n  width: 40vw;\r\n  text-align: left;\r\n`;\r\n\r\nexport default BasicUsage;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Toggle = ({\r\n  offText,\r\n  onText,\r\n  extraLarge,\r\n  large,\r\n  small,\r\n  extraSmall,\r\n  colorOn,\r\n  colorOff,\r\n  textColorOff,\r\n  textColorOn,\r\n  disabled\r\n}) => (\r\n  <Container>\r\n    {offText && (\r\n      <OffText\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        textColorOff={textColorOff}\r\n      >\r\n        {offText}\r\n      </OffText>\r\n    )}\r\n    <Wrapper\r\n      extraLarge={extraLarge}\r\n      large={large}\r\n      small={small}\r\n      extraSmall={extraSmall}\r\n    >\r\n      <Input\r\n        type='checkbox'\r\n        disabled={disabled}\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        colorOn={colorOn}\r\n      />\r\n      <Slider\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        colorOff={colorOff}\r\n        disabled={disabled}\r\n      />\r\n    </Wrapper>\r\n    {onText && (\r\n      <OnText\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        textColorOn={textColorOn}\r\n      >\r\n        {onText}\r\n      </OnText>\r\n    )}\r\n  </Container>\r\n)\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Text = styled.span`\r\n  font-family: inherit;\r\n  ${(props) => {\r\n    if (props.extraLarge) {\r\n      return `\r\n        font-size: 1.4em;\r\n      `\r\n    } else if (props.large) {\r\n      return `\r\n        font-size: 1.2em;\r\n      `\r\n    } else if (props.small) {\r\n      return `\r\n        font-size: 0.8em;\r\n      `\r\n    } else if (props.extraSmall) {\r\n      return `\r\n        font-size: 0.6em;\r\n      `\r\n    } else {\r\n      return `\r\n        font-size: 1em;\r\n      `\r\n    }\r\n  }}\r\n`\r\n\r\nconst OffText = styled(Text)`\r\n  color: ${(props) => (props.textColorOff ? props.textColorOff : 'inherit')};\r\n`\r\n\r\nconst OnText = styled(Text)`\r\n  color: ${(props) => (props.textColorOn ? props.textColorOn : 'inherit')};\r\n`\r\n\r\nconst Wrapper = styled.label`\r\n  position: relative;\r\n  display: block;\r\n  margin: 0 0.5rem;\r\n  ${(props) => {\r\n    if (props.extraLarge) {\r\n      return `\r\n        width: 100px;\r\n        height: 50px;\r\n      `\r\n    } else if (props.large) {\r\n      return `\r\n        width: 80px;\r\n        height: 40px;\r\n      `\r\n    } else if (props.small) {\r\n      return `\r\n        width: 40px;\r\n        height: 20px;\r\n      `\r\n    } else if (props.extraSmall) {\r\n      return `\r\n        width: 20px;\r\n        height: 10px;\r\n      `\r\n    } else {\r\n      return `\r\n        width: 60px;\r\n        height: 30px;\r\n      `\r\n    }\r\n  }}\r\n`\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n  &:checked + span {\r\n    background: ${(props) => (props.colorOn ? props.colorOn : '#68d391')};\r\n    &::before {\r\n      ${(props) => {\r\n        if (props.extraLarge) {\r\n          return `\r\n            transform: translateX(48px) rotateZ(360deg);\r\n        `\r\n        } else if (props.large) {\r\n          return `\r\n            transform: translateX(38px) rotateZ(360deg);\r\n        `\r\n        } else if (props.small) {\r\n          return `\r\n            transform: translateX(18px) rotateZ(360deg);\r\n        `\r\n        } else if (props.extraSmall) {\r\n          return `\r\n            transform: translateX(8px) rotateZ(360deg);\r\n        `\r\n        } else {\r\n          return `\r\n            transform: translateX(28px) rotateZ(360deg);\r\n        `\r\n        }\r\n      }}\r\n    }\r\n  }\r\n`\r\n\r\nconst Slider = styled.span`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: left;\r\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\r\n  background: ${(props) =>\r\n    props.colorOff ? props.colorOff : props.disabled ? '#d2d2d2' : '#fc8181'};\r\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2),\r\n    inset 0 3px 8px 0 rgba(0, 0, 0, 0.3);\r\n  border-radius: 36px;\r\n  transition: transform 300ms, background-color 300ms;\r\n  transition-delay: 200ms;\r\n  ${(props) => {\r\n    if (props.extraLarge) {\r\n      return `\r\n        padding-inline-start: 6px;\r\n      `\r\n    } else if (props.large) {\r\n      return `\r\n        padding-inline-start: 5px;\r\n      `\r\n    } else if (props.small) {\r\n      return `\r\n        padding-inline-start: 3px;\r\n      `\r\n    } else if (props.extraSmall) {\r\n      return `\r\n        padding-inline-start: 2px;\r\n      `\r\n    } else {\r\n      return `\r\n        padding-inline-start: 4px;\r\n      `\r\n    }\r\n  }}\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    background: conic-gradient(#f7fafc, #edf2f7, #e2e8f0, #cbd5e0, #a0aec0);\r\n    transition: 300ms;\r\n    border-radius: 50%;\r\n    ${(props) => {\r\n      if (props.extraLarge) {\r\n        return `\r\n          width: 40px;\r\n          height: 40px;\r\n          top: 5px;\r\n      `\r\n      } else if (props.large) {\r\n        return `\r\n          width: 32px;\r\n          height: 32px;\r\n          top: 4px;\r\n      `\r\n      } else if (props.small) {\r\n        return `\r\n          width: 16px;\r\n          height: 16px;\r\n          top: 2px;\r\n      `\r\n      } else if (props.extraSmall) {\r\n        return `\r\n          width: 8px;\r\n          height: 8px;\r\n          top: 1px;\r\n      `\r\n      } else {\r\n        return `\r\n          width: 24px;\r\n          height: 24px;\r\n          top: 3px;\r\n      `\r\n      }\r\n    }}\r\n  }\r\n`\r\n\r\nexport default Toggle\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Toggle from 'react-custom-toggle';\r\n\r\nconst sizeOptions = ['extraSmall', 'small', 'default', 'large', 'extraLarge'];\r\n\r\nconst Sizes = () => {\r\n  const [selectedSize, setSelectedSize] = useState('default');\r\n\r\n  return (\r\n    <Container>\r\n      <h3>Sizes</h3>\r\n      <Box>\r\n        <ToogleBox>\r\n          <Toggle\r\n            extraSmall={selectedSize === 'extraSmall'}\r\n            small={selectedSize === 'small'}\r\n            large={selectedSize === 'large'}\r\n            extraLarge={selectedSize === 'extraLarge'} />\r\n        </ToogleBox>\r\n        <RadioGroup onChange={(e) => setSelectedSize(e.target.value)}>\r\n          {sizeOptions.map((size, index) => (\r\n            <Radio htmlFor={size} className=\"radio\" key={`size-${index}`}>\r\n              <input readOnly type=\"radio\" name=\"sizes\" value={size} id={size} checked={selectedSize === size} />\r\n              <span className=\"label\"></span>{size}\r\n            </Radio>\r\n          ))}\r\n        </RadioGroup>\r\n        <Pre>\r\n          <code>\r\n            {`<Toggle ${selectedSize === 'default' ? '' : selectedSize + ' '}/>`}\r\n          </code>\r\n        </Pre>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  margin: 5vw 0;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  border: 1px solid #eee;\r\n  box-shadow: 1px 3px 3px #ccc;\r\n  height: 20vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding-top: 2vw;\r\n`;\r\n\r\nconst ToogleBox = styled.div`\r\n  height: 6vw;\r\n`;\r\n\r\nconst RadioGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Radio = styled.label`\r\n  position: relative;\r\n  cursor: pointer;\r\n  line-height: 20px;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  display: flex;\r\n  input {\r\n    display: none;\r\n    &:checked + .label {\r\n      border-color: #63b3ed;\r\n      &:after {\r\n        transform: scale(1);\r\n        transition: all .2s cubic-bezier(.35,.9,.4,.9);\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n  span {\r\n    position: relative;\r\n    display: block;\r\n    float: left;\r\n    margin-right: 10px;\r\n    width: 16px;\r\n    height: 16px;\r\n    border: 2px solid #ccc;\r\n    border-radius: 100%;\r\n    -webkit-tap-highlight-color: transparent;\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 3px;\r\n      left: 3px;\r\n      width: 10px;\r\n      height: 10px;\r\n      border-radius: 100%;\r\n      background: #63b3ed;\r\n      transform: scale(0);\r\n      transition: all .2s ease;\r\n      opacity: 0.2;\r\n      pointer-events: none;\r\n    }\r\n    &:hover {\r\n      &:after {\r\n      transform: scale(3.6);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  border: 1px solid #ccc;\r\n  background: #f5f5f5;\r\n  border-radius: 4px;\r\n  padding: 10px 20px;\r\n  width: 40vw;\r\n  text-align: left;\r\n  margin: 0 auto 2vw;\r\n`;\r\n\r\nexport default Sizes;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport BasicUsage from './components/BasicUsage'\r\nimport Sizes from './components/Sizes'\r\nimport Toggle from 'react-custom-toggle'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <Title> React Custom Toggle </Title>\r\n      <BasicUsage />\r\n      <Sizes />\r\n      {/* <Toggle\r\n        offText='OFF'\r\n        onText='ON'\r\n        extraLarge\r\n        colorOff='#ED8936'\r\n        colorOn='#63B3ED'\r\n        textColorOff='#f12c6b'\r\n        textColorOn='#07e207'\r\n      />\r\n      <Toggle\r\n        offText='OFF'\r\n        onText='ON'\r\n        large\r\n        colorOff='orange'\r\n        colorOn='blue'\r\n        textColorOff='red'\r\n        textColorOn='lightgreen'\r\n      />\r\n      <Toggle offText='OFF' onText='ON' />\r\n      <Toggle disabled />\r\n      <Toggle offText='OFF' onText='ON' small />\r\n      <Toggle offText='OFF' onText='ON' extraSmall /> */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10vw;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 3vw;\r\n  text-align: center;\r\n`\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}