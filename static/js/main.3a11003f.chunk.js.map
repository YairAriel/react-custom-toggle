{"version":3,"sources":["components/BasicUsage/index.jsx","../../src/index.js","components/Sizes/index.jsx","components/common/TextField/index.jsx","components/Texts/index.jsx","App.js","index.js"],"names":["Pre","styled","pre","BasicUsage","Container","Text","props","OffText","OnText","Wrapper","Input","Slider","onChange","disabled","offText","extraLarge","large","small","extraSmall","textColorOff","type","checked","e","colorOn","colorOff","onText","textColorOn","sizeOptions","div","Box","ToogleBox","RadioGroup","Radio","label","CodeWrapper","Sizes","useState","isSunShining","setIsSunShining","selectedSize","setSelectedSize","target","value","map","size","index","htmlFor","className","key","readOnly","name","id","Field","TextField","changeHandler","placeholder","InputWrapper","Texts","textForOff","setTextForOff","textForOn","setTextForOn","Title","h1","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a11003f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BasicUsage = () => (\r\n  <>\r\n    <h3>Installation</h3>\r\n    <Pre>\r\n      <code>{`npm install react-custom-toggle`}</code>\r\n    </Pre>\r\n    <Pre>\r\n      <code>{`yarn add react-custom-toggle`}</code>\r\n    </Pre>\r\n    <h3>Usage</h3>\r\n    <Pre>\r\n      <code>\r\n        {`\r\nimport React, { useState } from 'react';\r\nimport Toggle from 'react-custom-toggle';\r\n     \r\nconst Example = () => {\r\n  const [isSunShining, setIsSunShining] = useState(false);\r\n\r\n  return (\r\n    <Toggle checked={isSunShining} onChange={setIsSunShining} />\r\n  );\r\n};`}\r\n      </code>\r\n    </Pre>\r\n  </>\r\n);\r\n\r\nconst Pre = styled.pre`\r\n  border: 1px solid #ccc;\r\n  background: #f5f5f5;\r\n  border-radius: 4px;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default BasicUsage;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Toggle = ({\r\n  checked,\r\n  onChange,\r\n  offText,\r\n  onText,\r\n  extraLarge,\r\n  large,\r\n  small,\r\n  extraSmall,\r\n  colorOn,\r\n  colorOff,\r\n  textColorOff,\r\n  textColorOn,\r\n  disabled\r\n}) => (\r\n  <Container>\r\n    {offText && (\r\n      <OffText\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        textColorOff={textColorOff}\r\n      >\r\n        {offText}\r\n      </OffText>\r\n    )}\r\n    <Wrapper\r\n      extraLarge={extraLarge}\r\n      large={large}\r\n      small={small}\r\n      extraSmall={extraSmall}\r\n    >\r\n      <Input\r\n        type='checkbox'\r\n        checked={checked}\r\n        onChange={(e) => onChange(e.target.checked)}\r\n        disabled={disabled}\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        colorOn={colorOn}\r\n      />\r\n      <Slider\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        colorOff={colorOff}\r\n        disabled={disabled}\r\n      />\r\n    </Wrapper>\r\n    {onText && (\r\n      <OnText\r\n        extraLarge={extraLarge}\r\n        large={large}\r\n        small={small}\r\n        extraSmall={extraSmall}\r\n        textColorOn={textColorOn}\r\n      >\r\n        {onText}\r\n      </OnText>\r\n    )}\r\n  </Container>\r\n)\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Text = styled.span`\r\n  font-family: inherit;\r\n  ${(props) => {\r\n    if (props.extraLarge) {\r\n      return `\r\n        font-size: 1.4em;\r\n      `\r\n    } else if (props.large) {\r\n      return `\r\n        font-size: 1.2em;\r\n      `\r\n    } else if (props.small) {\r\n      return `\r\n        font-size: 0.8em;\r\n      `\r\n    } else if (props.extraSmall) {\r\n      return `\r\n        font-size: 0.6em;\r\n      `\r\n    } else {\r\n      return `\r\n        font-size: 1em;\r\n      `\r\n    }\r\n  }}\r\n`\r\n\r\nconst OffText = styled(Text)`\r\n  color: ${(props) => (props.textColorOff ? props.textColorOff : 'inherit')};\r\n`\r\n\r\nconst OnText = styled(Text)`\r\n  color: ${(props) => (props.textColorOn ? props.textColorOn : 'inherit')};\r\n`\r\n\r\nconst Wrapper = styled.label`\r\n  position: relative;\r\n  display: block;\r\n  margin: 0 0.5rem;\r\n  ${(props) => {\r\n    if (props.extraLarge) {\r\n      return `\r\n        width: 100px;\r\n        height: 50px;\r\n      `\r\n    } else if (props.large) {\r\n      return `\r\n        width: 80px;\r\n        height: 40px;\r\n      `\r\n    } else if (props.small) {\r\n      return `\r\n        width: 40px;\r\n        height: 20px;\r\n      `\r\n    } else if (props.extraSmall) {\r\n      return `\r\n        width: 20px;\r\n        height: 10px;\r\n      `\r\n    } else {\r\n      return `\r\n        width: 60px;\r\n        height: 30px;\r\n      `\r\n    }\r\n  }}\r\n`\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n  &:checked + span {\r\n    background: ${(props) => (props.colorOn ? props.colorOn : '#68d391')};\r\n    &::before {\r\n      ${(props) => {\r\n        if (props.extraLarge) {\r\n          return `\r\n            transform: translateX(48px) rotateZ(360deg);\r\n        `\r\n        } else if (props.large) {\r\n          return `\r\n            transform: translateX(38px) rotateZ(360deg);\r\n        `\r\n        } else if (props.small) {\r\n          return `\r\n            transform: translateX(18px) rotateZ(360deg);\r\n        `\r\n        } else if (props.extraSmall) {\r\n          return `\r\n            transform: translateX(8px) rotateZ(360deg);\r\n        `\r\n        } else {\r\n          return `\r\n            transform: translateX(28px) rotateZ(360deg);\r\n        `\r\n        }\r\n      }}\r\n    }\r\n  }\r\n`\r\n\r\nconst Slider = styled.span`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: left;\r\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\r\n  background: ${(props) =>\r\n    props.colorOff ? props.colorOff : props.disabled ? '#d2d2d2' : '#fc8181'};\r\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2),\r\n    inset 0 3px 8px 0 rgba(0, 0, 0, 0.3);\r\n  border-radius: 36px;\r\n  transition: transform 300ms, background-color 300ms;\r\n  transition-delay: 200ms;\r\n  ${(props) => {\r\n    if (props.extraLarge) {\r\n      return `\r\n        padding-inline-start: 6px;\r\n      `\r\n    } else if (props.large) {\r\n      return `\r\n        padding-inline-start: 5px;\r\n      `\r\n    } else if (props.small) {\r\n      return `\r\n        padding-inline-start: 3px;\r\n      `\r\n    } else if (props.extraSmall) {\r\n      return `\r\n        padding-inline-start: 2px;\r\n      `\r\n    } else {\r\n      return `\r\n        padding-inline-start: 4px;\r\n      `\r\n    }\r\n  }}\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    background: conic-gradient(#f7fafc, #edf2f7, #e2e8f0, #cbd5e0, #a0aec0);\r\n    transition: 300ms;\r\n    border-radius: 50%;\r\n    ${(props) => {\r\n      if (props.extraLarge) {\r\n        return `\r\n          width: 40px;\r\n          height: 40px;\r\n          top: 5px;\r\n      `\r\n      } else if (props.large) {\r\n        return `\r\n          width: 32px;\r\n          height: 32px;\r\n          top: 4px;\r\n      `\r\n      } else if (props.small) {\r\n        return `\r\n          width: 16px;\r\n          height: 16px;\r\n          top: 2px;\r\n      `\r\n      } else if (props.extraSmall) {\r\n        return `\r\n          width: 8px;\r\n          height: 8px;\r\n          top: 1px;\r\n      `\r\n      } else {\r\n        return `\r\n          width: 24px;\r\n          height: 24px;\r\n          top: 3px;\r\n      `\r\n      }\r\n    }}\r\n  }\r\n`\r\n\r\nexport default Toggle\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Toggle from 'react-custom-toggle';\r\n\r\nconst sizeOptions = ['extraSmall', 'small', 'default', 'large', 'extraLarge'];\r\n\r\nconst Sizes = () => {\r\n  const [isSunShining, setIsSunShining] = useState(false);\r\n  const [selectedSize, setSelectedSize] = useState('default');\r\n\r\n  return (\r\n    <Container>\r\n      <h3>Sizes</h3>\r\n      <Box>\r\n        <ToogleBox>\r\n          <Toggle\r\n            checked={isSunShining}\r\n            onChange={setIsSunShining}\r\n            extraSmall={selectedSize === 'extraSmall'}\r\n            small={selectedSize === 'small'}\r\n            large={selectedSize === 'large'}\r\n            extraLarge={selectedSize === 'extraLarge'} />\r\n        </ToogleBox>\r\n        <RadioGroup onChange={(e) => setSelectedSize(e.target.value)}>\r\n          {sizeOptions.map((size, index) => (\r\n            <Radio htmlFor={size} className=\"radio\" key={`size-${index}`}>\r\n              <input\r\n                readOnly\r\n                type=\"radio\"\r\n                name=\"sizes\"\r\n                value={size}\r\n                id={size}\r\n                checked={selectedSize === size} />\r\n              <span className=\"label\"></span>{size}\r\n            </Radio>\r\n          ))}\r\n        </RadioGroup>\r\n        <CodeWrapper>\r\n          <Pre>\r\n            <code>\r\n              {`const [isSunShining, setIsSunShining] = useState(${isSunShining})`}\r\n            </code>\r\n          </Pre>\r\n          <Pre>\r\n            <code>\r\n              {`<Toggle checked={isSunShining} onChange={setIsSunShining} ${selectedSize === 'default' ? '' : selectedSize + ' '}/>`}\r\n            </code>\r\n          </Pre>\r\n        </CodeWrapper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  margin: 30px 0;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  border: 1px solid #eee;\r\n  box-shadow: 1px 3px 3px #ccc;\r\n  height: 250px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ToogleBox = styled.div`\r\n  height: 50px;\r\n`;\r\n\r\nconst RadioGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Radio = styled.label`\r\n  position: relative;\r\n  cursor: pointer;\r\n  line-height: 20px;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  display: flex;\r\n  input {\r\n    display: none;\r\n    &:checked + .label {\r\n      border-color: #63b3ed;\r\n      &:after {\r\n        transform: scale(1);\r\n        transition: all .2s cubic-bezier(.35,.9,.4,.9);\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n  span {\r\n    position: relative;\r\n    display: block;\r\n    float: left;\r\n    margin-right: 10px;\r\n    width: 16px;\r\n    height: 16px;\r\n    border: 2px solid #ccc;\r\n    border-radius: 100%;\r\n    -webkit-tap-highlight-color: transparent;\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 3px;\r\n      left: 3px;\r\n      width: 10px;\r\n      height: 10px;\r\n      border-radius: 100%;\r\n      background: #63b3ed;\r\n      transform: scale(0);\r\n      transition: all .2s ease;\r\n      opacity: 0.2;\r\n      pointer-events: none;\r\n    }\r\n    &:hover {\r\n      &:after {\r\n      transform: scale(3.6);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CodeWrapper = styled.div`\r\n  height: 110px;\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  border: 1px solid #ccc;\r\n  background: #f5f5f5;\r\n  border-radius: 4px;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default Sizes;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TextField = ({ label, value, changeHandler }) => (\r\n  <Field>\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\" \"\r\n      value={value}\r\n      onChange={(e) => changeHandler(e.target.value)}\r\n    />\r\n    <label>{label}</label>\r\n  </Field>\r\n);\r\n\r\nconst Field = styled.div`\r\n  position: relative; \r\n  label {\r\n    position: absolute;\r\n    font-size: 12px;\r\n    left: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background-color: white;\r\n    color: gray;\r\n    padding: 0 0.3rem;\r\n    margin: 0 0.5rem;\r\n    transition: 0.1s ease-out;\r\n    transform-origin: left top;\r\n    pointer-events: none;\r\n  }\r\n  input {\r\n    font-size: 14px;\r\n    outline: none;\r\n    border: 1px solid gray;\r\n    border-radius: 4px;  \r\n    padding: 10px;\r\n    transition: 0.1s ease-out;\r\n  }\r\n  input:focus {\r\n    border-color: #63b3ed;  \r\n  }\r\n  input:focus + label {\r\n    color: #63b3ed;\r\n    top: 0;\r\n    transform: translateY(-50%) scale(.9);\r\n  }\r\n  input:not(:placeholder-shown) + label {\r\n    top: 0;\r\n    transform: translateY(-50%) scale(.9);\r\n  }\r\n`;\r\n\r\nexport default TextField;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Toggle from 'react-custom-toggle';\r\nimport TextField from '../common/TextField';\r\n\r\nconst Texts = () => {\r\n  const [isSunShining, setIsSunShining] = useState(false);\r\n  const [textForOff, setTextForOff] = useState('OFF');\r\n  const [textForOn, setTextForOn] = useState('ON');\r\n\r\n  return (\r\n    <Container>\r\n      <h3>Texts</h3>\r\n      <Box>\r\n        <Toggle\r\n          checked={isSunShining}\r\n          onChange={setIsSunShining}\r\n          offText={textForOff}\r\n          onText={textForOn}\r\n        />\r\n        <InputWrapper>\r\n          <TextField label=\"textOff\" value={textForOff} changeHandler={setTextForOff} />\r\n          <TextField label=\"textOn\" value={textForOn} changeHandler={setTextForOn} />\r\n        </InputWrapper>\r\n        <CodeWrapper>\r\n          <Pre>\r\n            <code>\r\n              {`const [isSunShining, setIsSunShining] = useState(${isSunShining})`}\r\n            </code>\r\n          </Pre>\r\n          <Pre>\r\n            <code>\r\n              {`<Toggle checked={isSunShining} onChange={setIsSunShining} \r\n  offText=\"${textForOff}\" onText=\"${textForOn}\" />`}\r\n            </code>\r\n          </Pre>\r\n        </CodeWrapper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  margin: 30px 0;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  border: 1px solid #eee;\r\n  box-shadow: 1px 3px 3px #ccc;\r\n  height: 250px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst CodeWrapper = styled.div`\r\n  height: 140px;\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  border: 1px solid #ccc;\r\n  background: #f5f5f5;\r\n  border-radius: 4px;\r\n  padding: 10px 20px;\r\n  min-width: 50%;\r\n  text-align: left;\r\n  line-height: 22px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default Texts;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport BasicUsage from './components/BasicUsage'\r\nimport Sizes from './components/Sizes'\r\nimport Texts from './components/Texts';\r\nimport Toggle from 'react-custom-toggle'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <Title> React Custom Toggle </Title>\r\n      <BasicUsage />\r\n      <Sizes />\r\n      <Texts />\r\n      {/* <Toggle\r\n        offText='OFF'\r\n        onText='ON'\r\n        extraLarge\r\n        colorOff='#ED8936'\r\n        colorOn='#63B3ED'\r\n        textColorOff='#f12c6b'\r\n        textColorOn='#07e207'\r\n      />\r\n      <Toggle\r\n        offText='OFF'\r\n        onText='ON'\r\n        large\r\n        colorOff='orange'\r\n        colorOn='blue'\r\n        textColorOff='red'\r\n        textColorOn='lightgreen'\r\n      />\r\n      <Toggle offText='OFF' onText='ON' />\r\n      <Toggle disabled />\r\n      <Toggle offText='OFF' onText='ON' small />\r\n      <Toggle offText='OFF' onText='ON' extraSmall /> */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 768px;\r\n  padding: 0 50px;\r\n  box-sizing: border-box;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 20px;\r\n  text-align: center;\r\n`\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}